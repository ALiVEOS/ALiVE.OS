/*%FSM<COMPILE "scriptedFSM.cfg, tacom">*/
/*%FSM<HEAD>*/
/*
item0[] = {"INIT",0,250,-200.000000,-475.000000,-100.000000,-425.000000,0.000000,"INIT"};
item1[] = {"INIT_COMPLETE",4,218,-200.000000,-400.000000,-100.000000,-350.000000,0.000000,"INIT" \n "COMPLETE"};
item2[] = {"Start",2,250,-200.000000,-325.000000,-100.000000,-275.000000,0.000000,"Start"};
item3[] = {"Started",4,218,-200.000000,-250.000000,-100.000000,-200.000000,0.000000,"Started"};
item4[] = {"Wait_for_Data",2,250,-200.000000,-175.000000,-100.000000,-125.000000,0.000000,"Wait" \n "for" \n "Data"};
item5[] = {"Data_Received",4,218,-400.000000,25.000000,-300.000000,75.000000,0.000000,"Data" \n "Received"};
item6[] = {"Timeout",4,218,0.000000,25.000000,100.000000,75.000000,1.000000,"Timeout"};
item7[] = {"Process_Data",2,250,-400.000000,100.000000,-300.000000,150.000000,0.000000,"Process" \n "Data"};
item8[] = {"Order_Completed",4,218,-475.000000,175.000000,-375.000000,225.000000,5.000000,"Order" \n "Completed"};
item9[] = {"Order_Received",4,218,-325.000000,175.000000,-225.000000,225.000000,5.000000,"Order" \n "Received"};
item10[] = {"",7,210,-729.000000,-154.000000,-721.000000,-146.000000,0.000000,""};
item11[] = {"",7,210,-729.000000,196.000000,-721.000000,204.000000,0.000000,""};
item12[] = {"SELECT_SECTION",2,250,-325.000000,250.000000,-225.000000,300.000000,0.000000,"SELECT" \n "SECTION"};
item13[] = {"SECTION_SELECTED",4,218,-325.000000,325.000000,-225.000000,375.000000,0.000000,"SECTION" \n "SELECTED"};
item14[] = {"PREPARE_ORDERS",2,250,-325.000000,400.000000,-225.000000,450.000000,0.000000,"PREPARE" \n "ORDERS"};
item15[] = {"PREPARED",4,218,-325.000000,475.000000,-225.000000,525.000000,0.000000,"PREPARED"};
item16[] = {"ISSUE_ORDERS",2,250,-325.000000,550.000000,-225.000000,600.000000,0.000000,"ISSUE ORDERS"};
item17[] = {"GROUP_CONFIRM",4,218,-400.000000,625.000000,-300.000000,675.000000,0.000000,"GROUP" \n "CONFIRM"};
item18[] = {"GROUP_NOT_CONFIR",4,218,-250.000000,625.000000,-150.000000,675.000000,0.000000,"GROUP" \n "NOT" \n "CONFIRM"};
item19[] = {"TRANSMIT_TO_OPCO",2,250,-325.000000,700.000000,-225.000000,750.000000,0.000000,"TRANSMIT" \n "TO" \n "OPCOM"};
item20[] = {"Transmitted",4,218,-325.000000,775.000000,-225.000000,825.000000,5.000000,"Transmitted"};
item21[] = {"",7,210,-729.000000,871.000000,-721.000000,879.000000,0.000000,""};
item22[] = {"EXIT",4,218,275.000000,-175.000000,375.000000,-125.000000,99.000000,"EXIT"};
item23[] = {"END",1,250,400.000000,-175.000000,500.000000,-125.000000,0.000000,"END"};
item24[] = {"Internal_Analysi",2,250,0.000000,100.000000,100.000000,150.000000,0.000000,"Internal" \n "Analysis"};
item25[] = {"",7,210,-279.000000,871.000000,-271.000000,879.000000,0.000000,""};
item26[] = {"",7,210,46.000000,871.000000,54.000000,879.000000,0.000000,""};
item27[] = {"Analysis_Complet",4,218,0.000000,175.000000,100.000000,225.000000,1.000000,"Analysis" \n "Complete"};
link0[] = {0,1};
link1[] = {1,2};
link2[] = {2,3};
link3[] = {3,4};
link4[] = {4,5};
link5[] = {4,6};
link6[] = {4,22};
link7[] = {5,7};
link8[] = {6,24};
link9[] = {7,8};
link10[] = {7,9};
link11[] = {8,11};
link12[] = {9,12};
link13[] = {10,4};
link14[] = {11,10};
link15[] = {12,13};
link16[] = {13,14};
link17[] = {14,15};
link18[] = {15,16};
link19[] = {16,17};
link20[] = {16,18};
link21[] = {17,19};
link22[] = {18,19};
link23[] = {19,20};
link24[] = {20,25};
link25[] = {21,11};
link26[] = {22,23};
link27[] = {24,27};
link28[] = {25,21};
link29[] = {26,25};
link30[] = {27,26};
globals[] = {0.000000,0,0,0,0,640,480,1,116,6316128,1,-773.315552,330.159790,597.473206,-588.938538,785,844,1};
window[] = {2,-1,-1,-32000,-32000,1256,309,1476,164,3,807};
*//*%FSM</HEAD>*/
class FSM
{
        fsmName = "tacom";
        class States
        {
                /*%FSM<STATE "INIT">*/
                class INIT
                {
                        name = "INIT";
                        itemno = 0;
                        init = /*%FSM<STATEINIT""">*/"_busy = false;" \n
                         "_exitFSM = false;" \n
                         "_TAC_confirmed = false;" \n
                         "" \n
                         "_totalAttack = 0;" \n
                         "_totalDefend = 0;" \n
                         "_totalReserve = 0;" \n
                         "_totalRecon = 0;" \n
                         "" \n
                         "_TACOM_status = ""Init"";" \n
                         "_lastDataProcessTime = time;" \n
                         "_timestamp = time;" \n
                         "" \n
                         "_OPCOM_HANDLER = _this select 0;" \n
                         "_OPCOM_FSM =  [_OPCOM_HANDLER,""OPCOM_FSM""] call ALiVE_fnc_HashGet;" \n
                         "_TACOM_FSM =  [_OPCOM_HANDLER,""TACOM_FSM""] call ALiVE_fnc_HashGet;" \n
                         "_TACOM_QUEUE = [];" \n
                         "" \n
                         "_debug = [_OPCOM_HANDLER,""debug"",false] call ALiVE_fnc_HashGet;" \n
                         "_side = [_OPCOM_HANDLER,""side"",""EAST""] call ALiVE_fnc_HashGet;" \n
                         "_factions = [_OPCOM_HANDLER,""factions"",[""OPF_F""]] call ALiVE_fnc_HashGet;" \n
                         "_sidesEnemy = [_OPCOM_HANDLER,""sidesenemy"",""WEST""] call ALiVE_fnc_HashGet;" \n
                         "" \n
                         "_lastanalyze = 0;" \n
                         "_lastEnemyScan = 0;" \n
                         "_cycleTime = 120;" \n
                         "_pause = false;" \n
                         "" \n
                         "// TODO: Make this able to be changed dynamically.. ie read it again" \n
                         "_sectionsamount_attack = [_OPCOM_HANDLER,""sectionsamount_attack"",4] call ALiVE_fnc_HashGet;" \n
                         "_sectionsamount_reserve = [_OPCOM_HANDLER,""sectionsamount_reserve"",1] call ALiVE_fnc_HashGet;" \n
                         "_sectionsamount_defend = [_OPCOM_HANDLER,""sectionsamount_defend"",2] call ALiVE_fnc_HashGet;" \n
                         "" \n
                         "_colorside = switch (_side) do {" \n
                         "    case (""WEST"") : {""ColorBlue""};" \n
                         "    case (""EAST"") : {""ColorRed""};" \n
                         "    case (""GUER"") : {""ColorGreen""};" \n
                         "    default         {""ColorRed""};" \n
                         "};" \n
                         "" \n
                         "// Get all controlled profiles" \n
                         "_inf = [_OPCOM_HANDLER,""infantry"",[]] call ALiVE_fnc_HashGet;" \n
                         "_mot = [_OPCOM_HANDLER,""motorized"",[]] call ALiVE_fnc_HashGet;" \n
                         "_mech = [_OPCOM_HANDLER,""mechanized"",[]] call ALiVE_fnc_HashGet;" \n
                         "_armored = [_OPCOM_HANDLER,""armored"",[]] call ALiVE_fnc_HashGet;" \n
                         "_artillery = [_OPCOM_HANDLER,""artillery"",[]] call ALiVE_fnc_HashGet;" \n
                         "_AAA = [_OPCOM_HANDLER,""AAA"",[]] call ALiVE_fnc_HashGet;" \n
                         "_air = [_OPCOM_HANDLER,""air"",[]] call ALiVE_fnc_HashGet;" \n
                         "_sea = [_OPCOM_HANDLER,""sea"",[]] call ALiVE_fnc_HashGet;" \n
                         "" \n
                         "_profiles = _inf + _mot + _mech + _armored + _artillery + _AAA + _air + _sea;" \n
                         "" \n
                         "" \n
                         "// init ambient movement on all owned vehicles profiles without waypoints" \n
                         "{" \n
                         "    private _profile = [ALiVE_ProfileHandler,""getProfile"", _x] call ALiVE_fnc_ProfileHandler;" \n
                         "" \n
                         "    if !(isNil ""_profile"") then {" \n
                         "        private _vehiclesInCommandOf = [_profile,""vehiclesInCommandOf"",[]] call ALiVE_fnc_HashGet;" \n
                         "        private _activeCommands = [_profile, ""activeCommands"", []] call ALIVE_fnc_HashGet;" \n
                         "" \n
                         "        if (count _vehiclesInCommandOf > 0 && { count _activeCommands == 0 }) then {" \n
                         "            [_profile, ""setActiveCommand"", [""ALiVE_fnc_ambientMovement"",""spawn"",[1000,""SAFE"",[0,0,0]]]] call ALIVE_fnc_profileEntity;" \n
                         "        };" \n
                         "    } else {" \n
                         "        [""TACOM: NULL profile passed to FSM: %1"", _x] call ALiVE_fnc_dump;" \n
                         "    };" \n
                         "} foreach _profiles;" \n
                         "" \n
                         "" \n
                         "if (_debug) then {" \n
                         "    [""MIL TACOM - Counting %1 profiles for faction %2"", count _profiles, _factions] call ALiVE_fnc_dumpR;" \n
                         "};" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "INIT_COMPLETE">*/
                                class INIT_COMPLETE
                                {
                                        itemno = 1;
                                        priority = 0.000000;
                                        to="Start";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_OPCOM_FSM =  [_OPCOM_HANDLER,""OPCOM_FSM""] call ALiVE_fnc_HashGet;" \n
                                         "_TACOM_FSM =  [_OPCOM_HANDLER,""TACOM_FSM""] call ALiVE_fnc_HashGet;" \n
                                         "" \n
                                         "!(isnil ""_OPCOM_FSM"") && !(isnil ""_TACOM_FSM"") && {_OPCOM_FSM > 0 && _TACOM_FSM > 0};"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "Start">*/
                class Start
                {
                        name = "Start";
                        itemno = 2;
                        init = /*%FSM<STATEINIT""">*/"if (_debug) then {" \n
                         "    [""TACOM Started!""] call ALiVE_fnc_dumpR;" \n
                         "};" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "Started">*/
                                class Started
                                {
                                        itemno = 3;
                                        priority = 0.000000;
                                        to="Wait_for_Data";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"true"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "Wait_for_Data">*/
                class Wait_for_Data
                {
                        name = "Wait_for_Data";
                        itemno = 4;
                        init = /*%FSM<STATEINIT""">*/"[""-----------------TACOM----- WAIT FOR DATA - %1"", count _TACOM_QUEUE] call ALiVE_fnc_Dump;" \n
                         "[""-----------------TACOM----- TOTALS - Reserve=%1, Recon=%2, Attack=%3, Defend=%4"", _totalReserve, _totalRecon, _totalAttack, _totalDefend] call ALiVE_fnc_Dump;" \n
                         "" \n
                         "_TACOM_status = ""waiting for data"";"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "EXIT">*/
                                class EXIT
                                {
                                        itemno = 22;
                                        priority = 99.000000;
                                        to="END";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_exitFSM"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "Timeout">*/
                                class Timeout
                                {
                                        itemno = 6;
                                        priority = 1.000000;
                                        to="Internal_Analysi";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"// if queue is empty run analysis every 15s" \n
                                         "// if 25s have elapsed without analysis, ignore queue and start analysis" \n
                                         "" \n
                                         "((_TACOM_QUEUE isequalto []) && (time - _lastanalyze) >= 15)" \n
                                         "||" \n
                                         "{ (time - _lastanalyze) >= 25 }"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[""-----------------TACOM----- Timeout""] call ALiVE_fnc_Dump;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "Data_Received">*/
                                class Data_Received
                                {
                                        itemno = 5;
                                        priority = 0.000000;
                                        to="Process_Data";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!(_TACOM_QUEUE isequalto []) && { time - _lastDataProcessTime > 0.5 }"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[""-----------------TACOM----- Data Received""] call ALiVE_fnc_Dump;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "Process_Data">*/
                class Process_Data
                {
                        name = "Process_Data";
                        itemno = 7;
                        init = /*%FSM<STATEINIT""">*/"private [""_pos"",""_objective"",""_size"",""_operation"",""_data_operation"",""_data_value"",""_dataset"",""_transmit"",""_TACOM_ACTION"",""_timeout"",""_section"",""_sectionSupport"",""_event"",""_eventID""];" \n
                         "[""-----------------TACOM----- Process Data""] call ALiVE_fnc_Dump;" \n
                         "_busy = true;" \n
                         "_TACOM_status = ""Analysis"";" \n
                         "_timestamp = time;" \n
                         "" \n
                         "_tacomAction = ["""", []];" \n
                         "" \n
                         "_section = [];" \n
                         "_sections = [];" \n
                         "" \n
                         "" \n
                         "_TACOM_ACTION = _TACOM_QUEUE deleteat 0;" \n
                         "_TACOM_ACTION params [""_DATA_OPERATION"",""_DATA_VALUE""];" \n
                         "" \n
                         "[""-----------------_DATA_OPERATION = %1 |||| _DATA_VALUE = %2"", _DATA_OPERATION, _DATA_VALUE] call ALiVE_fnc_Dump;" \n
                         "_TACOM_ACTION = nil;" \n
                         "_thefuckingorderes = ""ahhh"";" \n
                         "" \n
                         "//select data operation" \n
                         "switch (_DATA_OPERATION) do {" \n
                         "" \n
                         "    case (""analyze"") : {" \n
                         "        private [""_targets"",""_targetID"",""_target"",""_vehicle""];" \n
                         "" \n
                         "        _objective = _DATA_VALUE;" \n
                         "        _pos = [_objective,""center""] call AliVE_fnc_HashGet;" \n
                         "        _opcom_orders = [_objective,""opcom_orders""] call AliVE_fnc_HashGet;" \n
                         "        _state = [_objective,""opcom_state""] call AliVE_fnc_HashGet;" \n
                         "        _playertasks = [_OPCOM_HANDLER,""playertasks"",[]] call ALiVE_fnc_HashGet;" \n
                         "" \n
                         "[""-----------------OPCOM_ORDERS FOR OBJ %1 ARE %2"", [_objective,""objectiveID""] call ALiVE_fnc_hashGet, _opcom_orders] call ALiVE_fnc_Dump;" \n
                         "_thefuckingorderes = _opcom_orders;" \n
                         "        //select internal TACOM orders by global OPCOM order and set appropriate conditions for execution" \n
                         "        switch (_opcom_orders) do {" \n
                         "" \n
                         "            case (""attack"") : {" \n
                         "                _danger = [_objective,""danger"",-1] call AliVE_fnc_HashGet;" \n
                         "                _size = _sectionsamount_attack;" \n
                         "" \n
                         "                if (_danger < 0) then {" \n
                         "                    _totalRecon = _totalRecon + 1;" \n
                         "                    _tacomAction = [""recon"", [_objective,_size]];" \n
                         "                } else {" \n
                         "                    _totalAttack = _totalAttack + 1;" \n
                         "                    _tacomAction = [""capture"", [_objective,_size]];" \n
                         "                };" \n
                         "" \n
                         "                if (_danger > 0) then {" \n
                         "                    // Request OPCOM check objective for airfield and send OCA if necessary" \n
                         "                    _OPCOM_FSM setFSMVariable [""_OPCOM_DATA"",[""OCA"",[_objectiveID]]];" \n
                         "                };" \n
                         "            };" \n
                         "" \n
                         "            case (""defend"") : {" \n
                         "                _totalDefend = _totalDefend + 1;" \n
                         "" \n
                         "                //Define defense conditions" \n
                         "                //Detect near enemies" \n
                         "                _nearEnemies = [_objective,""findProfilesNearPosition"",[_pos,_sidesEnemy,false]] call AliVE_fnc_OPCOM;" \n
                         "" \n
                         "                //Defend until no enemies are near" \n
                         "                if (count _nearEnemies > 0) then {" \n
                         "" \n
                         "                    //Request CAS on ""defend"" order" \n
                         "                    if !(_state == ""defending"") then {" \n
                         "                        _attackers = [_OPCOM_HANDLER, ""attackentity"",[_nearEnemies select 0 select 0,1,""air""]] call ALIVE_fnc_OPCOM;" \n
                         "                    };" \n
                         "" \n
                         "                    _size = _sectionsamount_defend;" \n
                         "                    _tacomAction = [""defend"", [_objective,_size]];" \n
                         "                } else {" \n
                         "                    _size = _sectionsamount_reserve;" \n
                         "                    _tacomAction = [""reserve"", [_objective,_size]];" \n
                         "                };" \n
                         "            };" \n
                         "" \n
                         "            case (""reserve"") : {" \n
                         "                _totalReserve = _totalReserve + 1;" \n
                         "                _size = _sectionsamount_reserve;" \n
                         "" \n
                         "                _tacomAction = [""reserve"", [_objective,_size]];" \n
                         "            };" \n
                         "" \n
                         "            default {" \n
                         "" \n
                         "            };" \n
                         "" \n
                         "        };" \n
                         "    };" \n
                         "" \n
                         "    case (""completed"") : {" \n
                         "        _DATA_VALUE params [""_profileID"",""_objectiveID"",""_orders""];" \n
                         "" \n
                         "        _objective = [_OPCOM_HANDLER,""getobjectivebyid"", _objectiveID] call ALiVE_fnc_OPCOM;" \n
                         "        _profile = [ALiVE_ProfileHandler,""getProfile"", _profileID] call ALiVE_fnc_ProfileHandler;" \n
                         "" \n
                         "        if (isnil ""_profile"") exitwith {" \n
                         "            _TACOM_QUEUE pushback [""analyze"",_objective];" \n
                         "            _busy = false;" \n
                         "        };" \n
                         "" \n
                         "        _posP = [_profile,""position""] call ALiVE_fnc_HashGet;" \n
                         "        _section = [_objective,""section""] call AliVE_fnc_HashGet;" \n
                         "        _state = [_objective,""tacom_state""] call AliVE_fnc_HashGet;" \n
                         "        _transmit = ([_objective,""opcom_state""] call AliVE_fnc_HashGet) != ""internal"";" \n
                         "        _dataset = nil;" \n
                         "" \n
                         "        private _nextAnalysisJob = [];" \n
                         "" \n
                         "        switch (_state) do {" \n
                         "" \n
                         "            case (""recon"") : {" \n
                         "                if !([_OPCOM_HANDLER,""synchronizeorders"",_profileID] call ALiVE_fnc_OPCOM) exitwith {" \n
                         "                    if (_debug) then {" \n
                         "                        private _pendingOrders = [_OPCOM_HANDLER,""pendingorders"",[]] call ALiVE_fnc_HashGet;" \n
                         "                        [" \n
                         "                            ""TACOM %1 regrouping! Waiting for %2 groups!""," \n
                         "                            _profileID," \n
                         "                            {" \n
                         "                                _objectiveID == (_x select 2)" \n
                         "                            } count _pendingOrders" \n
                         "                        ] call ALIVE_fnc_dumpR;" \n
                         "                    };" \n
                         "                };" \n
                         "" \n
                         "                //All groups are in position" \n
                         "                //Scan for visible enemies (done only once on recon for performance sake - regulary scan every 2 minutes done by OPCOM)" \n
                         "                private _nearVisibleEnemies = [_OPCOM_HANDLER,""scanForNearEnemies"", [_posP, true]] call ALiVE_fnc_OPCOM;" \n
                         "                _danger = count _nearVisibleEnemies;" \n
                         "" \n
                         "                // TBD: Calculate danger level depending on recon outcome (sector analysis)" \n
                         "                [_objective,""danger"", _danger] call AliVE_fnc_HashSet;" \n
                         "" \n
                         "                if (_danger > 0) then {" \n
                         "                    if (_debug) then {" \n
                         "                        [""TACOM %2 spotted %3 enemies at %1!"",_objectiveID,_side,_danger] call ALiVE_fnc_DumpR;" \n
                         "                    };" \n
                         "" \n
                         "                    _OPCOM_FSM setFSMVariable [""_OPCOM_DATA"",[""QRF"",[_objectiveID]]];" \n
                         "                } else {" \n
                         "                    if (_debug) then {" \n
                         "                        [""TACOM %2 didn't spot any enemies at %1!"",_objectiveID,_side] call ALiVE_fnc_DumpR;" \n
                         "                    };" \n
                         "                };" \n
                         "" \n
                         "                _nextAnalysisJob = [""analyze"",_objective];" \n
                         "" \n
                         "                _event = ['OPCOM_RECON', [_side,_objective],""OPCOM""] call ALIVE_fnc_event;" \n
                         "                _eventID = [ALIVE_eventLog, ""addEvent"",_event] call ALIVE_fnc_eventLog;" \n
                         "            };" \n
                         "" \n
                         "            case (""capture"") : {" \n
                         "                if !([_OPCOM_HANDLER,""synchronizeorders"",_profileID] call ALiVE_fnc_OPCOM) exitwith {" \n
                         "                    if (_debug) then {" \n
                         "                        private _pendingOrders = [_OPCOM_HANDLER,""pendingorders"",[]] call ALiVE_fnc_HashGet;" \n
                         "                        [" \n
                         "                            ""TACOM %1 regrouping! Waiting for %2 groups!""," \n
                         "                            _profileID," \n
                         "                            {" \n
                         "                                _objectiveID == (_x select 2)" \n
                         "                            } count _pendingOrders" \n
                         "                        ] call ALIVE_fnc_dumpR;" \n
                         "                    };" \n
                         "                };" \n
                         "" \n
                         "                //set objective state and re-analyse after objective state change" \n
                         "                [_objective,""opcom_state"",""reserve""] call AliVE_fnc_HashSet;" \n
                         "                [_objective,""opcom_orders"",""reserve""] call AliVE_fnc_HashSet;" \n
                         "" \n
                         "                _nextAnalysisJob = [""analyze"",_objective];" \n
                         "" \n
                         "                _event = ['OPCOM_CAPTURE', [_side,_objective],""OPCOM""] call ALIVE_fnc_event;" \n
                         "               _eventID = [ALIVE_eventLog, ""addEvent"",_event] call ALIVE_fnc_eventLog;" \n
                         "            };" \n
                         "" \n
                         "            case (""defend"") : {" \n
                         "                if !([_OPCOM_HANDLER,""synchronizeorders"",_profileID] call ALiVE_fnc_OPCOM) exitwith {" \n
                         "                    if (_debug) then {" \n
                         "                        private _pendingOrders = [_OPCOM_HANDLER,""pendingorders"",[]] call ALiVE_fnc_HashGet;" \n
                         "                        [" \n
                         "                            ""TACOM %1 regrouping! Waiting for %2 groups!""," \n
                         "                            _profileID," \n
                         "                            {" \n
                         "                                _objectiveID == (_x select 2)" \n
                         "                            } count _pendingOrders" \n
                         "                        ] call ALIVE_fnc_dumpR;" \n
                         "                    };" \n
                         "                };" \n
                         "" \n
                         "                _nextAnalysisJob = [""analyze"",_objective];" \n
                         "" \n
                         "                _event = ['OPCOM_DEFEND', [_side,_objective],""OPCOM""] call ALIVE_fnc_event;" \n
                         "                _eventID = [ALIVE_eventLog, ""addEvent"",_event] call ALIVE_fnc_eventLog;" \n
                         "            };" \n
                         "" \n
                         "            case (""reserve"") : {" \n
                         "                _ProfilesReserve = [_OPCOM_HANDLER,""ProfileIDsReserve"",[]] call ALiVE_fnc_HashGet;" \n
                         "                if !(_profileID in _ProfilesReserve) then {" \n
                         "                    _ProfilesReserve pushback _profileID;" \n
                         "                };" \n
                         "" \n
                         "                if !([_OPCOM_HANDLER,""synchronizeorders"",_profileID] call ALiVE_fnc_OPCOM) exitwith {" \n
                         "                    if(_debug) then { [""TACOM %1regrouping! Waiting for %2 groups!"",_profileID,({_objectiveID == (_x select 2)} count ([_OPCOM_HANDLER,""pendingorders"",[]] call ALiVE_fnc_HashGet))] call ALIVE_fnc_dumpR; };" \n
                         "                };" \n
                         "" \n
                         "                [_objective,""danger"",-1] call AliVE_fnc_HashSet;" \n
                         "                [_profile, ""clearWaypoints""] call ALIVE_fnc_profileEntity;" \n
                         "" \n
                         "                //Command to garrison" \n
                         "                [_profile, ""clearActiveCommands""] call ALIVE_fnc_profileEntity;" \n
                         "                [_profile, ""setActiveCommand"", [""ALIVE_fnc_garrison"",""spawn"",[200,""true"",[0,0,0]]]] call ALIVE_fnc_profileEntity;" \n
                         "" \n
                         "                //transmit to OPCOM as objective was completed" \n
                         "                [_objective,""opcom_state"",""idle""] call AliVE_fnc_HashSet;" \n
                         "                [_objective,""opcom_orders"",""none""] call AliVE_fnc_HashSet;" \n
                         "                if (_debug) then {" \n
                         "                    private _objectiveID = [_objective,""objectiveID""] call AliVE_fnc_HashGet;" \n
                         "                    _objectiveID setMarkerColorLocal _colorside;" \n
                         "                };" \n
                         "" \n
                         "                _event = ['OPCOM_RESERVE', [_side,_objective],""OPCOM""] call ALIVE_fnc_event;" \n
                         "                _eventID = [ALIVE_eventLog, ""addEvent"",_event] call ALIVE_fnc_eventLog;" \n
                         "            };" \n
                         "" \n
                         "        };" \n
                         "" \n
                         "        if (_transmit) then {" \n
                         "            _TACOM_QUEUE pushback _nextAnalysisJob;" \n
                         "        };" \n
                         "" \n
                         "        _tacomAction = [""order_completed"", [_orders,_profileID,_objectiveID]];" \n
                         "" \n
                         "    };" \n
                         "" \n
                         "    default {" \n
                         "" \n
                         "    };" \n
                         "" \n
                         "};" \n
                         "" \n
                         "if (_tacomAction isequalto ["""", []]) then {" \n
                         "    [""-----------------_DATA_OPERATION = NO RET VALUE - %1 == OPCOM-ORDERS=%2"", _DATA_OPERATION, _thefuckingorderes] call ALiVE_fnc_Dump;" \n
                         "};" \n
                         "" \n
                         "_busy = false;" \n
                         "_lastDataProcessTime = time;" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "Order_Received">*/
                                class Order_Received
                                {
                                        itemno = 9;
                                        priority = 5.000000;
                                        to="SELECT_SECTION";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_tacomAction select 0) != ""order_completed"""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[""-----------------TACOM----- Order not complete - %1"", _tacomAction] call ALiVE_fnc_Dump;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "Order_Completed">*/
                                class Order_Completed
                                {
                                        itemno = 8;
                                        priority = 5.000000;
                                        to="Wait_for_Data";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(_tacomAction select 0) == ""order_completed"""/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[""-----------------TACOM----- Order Completed - %1"", _tacomAction] call ALiVE_fnc_Dump;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "SELECT_SECTION">*/
                class SELECT_SECTION
                {
                        name = "SELECT_SECTION";
                        itemno = 12;
                        init = /*%FSM<STATEINIT""">*/"private [""_section"",""_sectionAssist"",""_hdl""];" \n
                         "[""-----------------TACOM----- SELECT SECTION""] call ALiVE_fnc_Dump;" \n
                         "_TACOM_status = ""Select section"";" \n
                         "_timestamp = time;" \n
                         "" \n
                         "//prepare data" \n
                         "" \n
                         "_tacomAction params [""_operation"",""_operationData""];" \n
                         "_operation = _tacomAction select 0;" \n
                         "if (_operation == """") then {" \n
                         "    [""-----------------TACOM----- EMPTY OPERATION: %1"", _tacomAction] call ALiVE_fnc_Dump;" \n
                         "};" \n
                         "private [""_objective"",""_size""];" \n
                         "switch (_operation) do {" \n
                         "    case ""recon"": {" \n
                         "        systemchat ""recon"";" \n
                         "        _objective = _operationData select 0;" \n
                         "        _size = _operationData select 1;" \n
                         "    };" \n
                         "    case ""capture"": {" \n
                         "        systemchat ""capture"";" \n
                         "        _objective = _operationData select 0;" \n
                         "        _size = _operationData select 1;" \n
                         "    };" \n
                         "    case ""defend"": {" \n
                         "        systemchat ""defend"";" \n
                         "        _objective = _operationData select 0;" \n
                         "        _size = _operationData select 1;" \n
                         "    };" \n
                         "    case ""reserve"": {" \n
                         "        systemchat ""reserve"";" \n
                         "        _objective = _operationData select 0;" \n
                         "        _size = _operationData select 1;" \n
                         "    };" \n
                         "};" \n
                         "" \n
                         "_section = [_objective, ""section"",[]] call ALiVE_fnc_HashGet;" \n
                         "{" \n
                         "    private _profile = [ALiVE_ProfileHandler,""getProfile"",_x] call ALiVE_fnc_ProfileHandler;" \n
                         "" \n
                         "    if (isnil ""_profile"") then {" \n
                         "        [_OPCOM_HANDLER,""resetorders"",_x] call ALiVE_fnc_OPCOM;" \n
                         "    };" \n
                         "} foreach _section;" \n
                         "" \n
                         "_section = [_objective, ""section"",[]] call ALiVE_fnc_HashGet;" \n
                         "if (count _section < _size) then {" \n
                         "    _hdl = [_OPCOM_HANDLER,[_objective,_size]] spawn {" \n
                         "        private [""_objective"",""_pos""];" \n
                         "" \n
                         "        _objective = _this select 1 select 0;" \n
                         "        _size = _this select 1 select 1;" \n
                         "        _pos = [_objective,""center""] call ALiVE_fnc_HashGet;" \n
                         "" \n
                         "        _sectionAssist = [_this select 0,""NearestAvailableSection"",[_pos,_size,[""infantry"",""motorized"",""mechanized"",""armored""]]] call ALiVE_fnc_OPCOM;" \n
                         "        [_objective, ""sectionAssist"",_sectionAssist] call ALiVE_fnc_HashSet;" \n
                         "    };" \n
                         "} else {" \n
                         "    _hdl = [] spawn {true};" \n
                         "};"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "SECTION_SELECTED">*/
                                class SECTION_SELECTED
                                {
                                        itemno = 13;
                                        priority = 0.000000;
                                        to="PREPARE_ORDERS";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"scriptdone _hdl;"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[""-----------------TACOM----- SECTION SELECTED""] call ALiVE_fnc_Dump;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "PREPARE_ORDERS">*/
                class PREPARE_ORDERS
                {
                        name = "PREPARE_ORDERS";
                        itemno = 14;
                        init = /*%FSM<STATEINIT""">*/"terminate _hdl;" \n
                         "[""-----------------TACOM----- PREPARE ORDERS""] call ALiVE_fnc_Dump;" \n
                         "private [""_sectionAssist""];" \n
                         "_sectionAssist = [_objective,""sectionAssist"",[]] call AliVE_fnc_HashGet;" \n
                         "" \n
                         "//Add groups" \n
                         "if (count _section < _size) then {" \n
                         "" \n
                         "    for ""_i"" from 0 to ((_size - (count _section)) - 1) do {" \n
                         "        if (_i > ((count _sectionAssist) - 1)) exitwith {};" \n
                         "" \n
                         "        _section pushback (_sectionAssist select _i);" \n
                         "    };" \n
                         "    [_objective,""section"",_section] call AliVE_fnc_HashSet;" \n
                         "};" \n
                         "" \n
                         "//Remove groups" \n
                         "if ((count _section) > _size) then {" \n
                         "    {" \n
                         "        _section = [_objective,""section"",[]] call AliVE_fnc_HashGet;" \n
                         "" \n
                         "        if (count _section == _size) exitwith {};" \n
                         "        [_OPCOM_HANDLER,""resetorders"",_x] call ALiVE_fnc_OPCOM;" \n
                         "    } foreach _section;" \n
                         "};" \n
                         "" \n
                         "_section = [_objective,""section"",[]] call AliVE_fnc_HashGet;"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "PREPARED">*/
                                class PREPARED
                                {
                                        itemno = 15;
                                        priority = 0.000000;
                                        to="ISSUE_ORDERS";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"true"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[""-----------------TACOM----- PREPARED""] call ALiVE_fnc_Dump;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "ISSUE_ORDERS">*/
                class ISSUE_ORDERS
                {
                        name = "ISSUE_ORDERS";
                        itemno = 16;
                        init = /*%FSM<STATEINIT""">*/"[""-----------------TACOM----- ISSUE ORDERS""] call ALiVE_fnc_Dump;" \n
                         "_TACOM_status = ""Order"";" \n
                         "_timestamp = time;" \n
                         "" \n
                         "//Get all profileIDs and objectives" \n
                         "private _profiles = ([ALIVE_profileHandler, ""getProfiles"", ""entity""] call ALIVE_fnc_profileHandler) select 1;" \n
                         "_objectives = [_OPCOM_HANDLER,""objectives""] call ALiVE_fnc_HashGet;" \n
                         "private _section = [_objective,""section"",[]] call AliVE_fnc_HashGet;" \n
                         "private _state = [_objective,""opcom_state"",""unassigned""] call ALiVE_fnc_HashGet;" \n
                         "private _pos = [_objective,""center""] call AliVE_fnc_HashGet;" \n
                         "private _objectiveID = [_objective,""objectiveID""] call AliVE_fnc_HashGet;" \n
                         "" \n
                         "_tacomAction params [""_tacomOperation"",""_tacomOperationData""];" \n
                         "_tacomOperationData params [""_objective"",""_objectiveSize""];" \n
                         "" \n
                         "_tacomResponse = [""NO RESPONSE"",""NO RESPONSE""];" \n
                         "" \n
                         "//set orders by type" \n
                         "switch (_operation) do {" \n
                         "" \n
                         "    case ( ""recon"") : {" \n
                         "        if (count _section >= _sectionsamount_attack) then {" \n
                         "            [_objective,""tacom_state"",""recon""] call AliVE_fnc_HashSet;" \n
                         "" \n
                         "            private _turn = true;" \n
                         "" \n
                         "            {" \n
                         "                private _profileID = _x;" \n
                         "" \n
                         "                if (_profileID in _profiles) then {" \n
                         "                    private _profile = [ALIVE_profileHandler, ""getProfile"", _profileID] call ALIVE_fnc_profileHandler;" \n
                         "" \n
                         "                    //Select recon postion in angle to objectve" \n
                         "                    _posP = [_profile, ""position""] call ALiVE_fnc_profileEntity;" \n
                         "                    _direction = (_pos getDir _posP);" \n
                         "                    _newPosition = _pos getPos [500, _direction];" \n
                         "" \n
                         "                    if (_turn) then {" \n
                         "                        _direction = _direction - 90;" \n
                         "                        _turn = false;" \n
                         "                    } else {" \n
                         "                        _direction = _direction + 90;" \n
                         "                        _turn = true;" \n
                         "                    };" \n
                         "" \n
                         "                    _newPosition = (_newPosition getPos [150, _direction]);" \n
                         "" \n
                         "                    if (surfaceIsWater _newPosition) then {" \n
                         "                        _newPosition = [" \n
                         "                            _newPosition," \n
                         "                            0," \n
                         "                            500," \n
                         "                            1," \n
                         "                            0," \n
                         "                            100," \n
                         "                            1," \n
                         "                            []," \n
                         "                            [_newPosition]" \n
                         "                        ] call BIS_fnc_findSafePos;" \n
                         "                    };" \n
                         "" \n
                         "                    private _waypointPos = [_newPosition,50] call CBA_fnc_Randpos;" \n
                         "" \n
                         "                    [_OPCOM_HANDLER,""setorders"",[_waypointPos,_profileID,_objectiveID,_operation]] call ALiVE_fnc_OPCOM;" \n
                         "                };" \n
                         "            } foreach _section;" \n
                         "" \n
                         "            _tacomResponse = [_objective, _section];" \n
                         "            _TAC_confirmed = true;" \n
                         "        } else {" \n
                         "            if (count _section == 0) then {" \n
                         "                _tacomResponse = [_objective, [""no groups available""]];" \n
                         "                _TAC_confirmed = false;" \n
                         "            } else {" \n
                         "                {" \n
                         "                    private _profileID = _x;" \n
                         "" \n
                         "                    if (_profileID in _profiles) then {" \n
                         "                        _profile = [ALIVE_profileHandler, ""getProfile"", _profileID] call ALIVE_fnc_profileHandler;" \n
                         "" \n
                         "                        //Select nearest taken objective to regroup" \n
                         "                        _posP = [_profile, ""position""] call ALIVE_fnc_profileEntity;" \n
                         "                        private _objectivesX = [_objectives,[],{_posP distance (_x select 2 select 1)},""ASCEND""] call ALiVE_fnc_SortBy;" \n
                         "" \n
                         "                        {" \n
                         "                            private _state = [_x,""opcom_state""] call ALivE_fnc_HashGet;" \n
                         "" \n
                         "                            if (_state == ""idle"") exitwith {" \n
                         "                                private _waypointPos = [_x,""center""] call ALiVE_fnc_HashGet;" \n
                         "                                [_profile, ""clearWaypoints""] call ALIVE_fnc_profileEntity;" \n
                         "                                _profileWaypoint = [_waypointPos, 50] call ALIVE_fnc_createProfileWaypoint;" \n
                         "                                [_profile, ""addWaypoint"", _profileWaypoint] call ALIVE_fnc_profileEntity;" \n
                         "                            };" \n
                         "                        } foreach _objectivesX;" \n
                         "                    };" \n
                         "                } foreach _section;" \n
                         "" \n
                         "                _tacomResponse = [_objective, [""not enough groups to build a section, regrouping...""]];" \n
                         "                _TAC_confirmed = false;" \n
                         "            };" \n
                         "        };" \n
                         "" \n
                         "    };" \n
                         "" \n
                         "    case ( ""capture"") : {" \n
                         "" \n
                         "        if (count _section > 0) then {" \n
                         "            [_objective,""tacom_state"",""capture""] call AliVE_fnc_HashSet;" \n
                         "" \n
                         "            {" \n
                         "                private _profileID = _x;" \n
                         "" \n
                         "                if (_profileID in _profiles) then {" \n
                         "                    [_OPCOM_HANDLER,""setorders"",[([_pos,50] call CBA_fnc_RandPos),_profileID,_objectiveID,_operation]] call ALiVE_fnc_OPCOM;" \n
                         "                };" \n
                         "            } foreach _section;" \n
                         "" \n
                         "            _TAC_confirmed = false;" \n
                         "            _tacomResponse = [_objective, [""operation attack not finished""]];" \n
                         "        } else {" \n
                         "            _TAC_confirmed = false;" \n
                         "            _tacomResponse = [_objective, [""no groups available""]];" \n
                         "        };" \n
                         "" \n
                         "    };" \n
                         "" \n
                         "    case (""defend"") : {" \n
                         "" \n
                         "        if (count _section > 0) then {" \n
                         "            [_objective,""tacom_state"",""defend""] call AliVE_fnc_HashSet;" \n
                         "" \n
                         "            {" \n
                         "                private _profileID = _x;" \n
                         "" \n
                         "                    if (_profileID in _profiles) then {" \n
                         "                        [_OPCOM_HANDLER,""setorders"",[([_pos,50] call CBA_fnc_RandPos),_profileID,_objectiveID,_operation]] call ALiVE_fnc_OPCOM;" \n
                         "                    };" \n
                         "            } foreach _section;" \n
                         "" \n
                         "            _TAC_confirmed = true;" \n
                         "            _tacomResponse = [_objective, _section];" \n
                         "        } else {" \n
                         "            _TAC_confirmed = false;" \n
                         "            _tacomResponse = [_objective, [""no groups available""]];" \n
                         "        };" \n
                         "" \n
                         "    };" \n
                         "" \n
                         "    case ( ""reserve"") : {" \n
                         "        if (count _section > 0) then {" \n
                         "            [_objective,""tacom_state"",""reserve""] call AliVE_fnc_HashSet;" \n
                         "" \n
                         "            {" \n
                         "                    private _profileID = _x;" \n
                         "" \n
                         "                    if (_profileID in _profiles) then {" \n
                         "                        [_OPCOM_HANDLER,""setorders"",[([_pos,15] call CBA_fnc_RandPos),_profileID,_objectiveID,_operation]] call ALiVE_fnc_OPCOM;" \n
                         "                    };" \n
                         "            } foreach _section;" \n
                         "" \n
                         "            _tacomResponse = [_objective, _section];" \n
                         "            _TAC_confirmed = true;" \n
                         "        } else {" \n
                         "            _tacomResponse = [_objective, [""no groups available""]];" \n
                         "            _TAC_confirmed = false;" \n
                         "        };" \n
                         "" \n
                         "    };" \n
                         "" \n
                         "    default {" \n
                         "        [""-----------------TACOM----- BAD OPERATION! = %1"", _operation] call ALiVE_fnc_Dump;" \n
                         "    };" \n
                         "" \n
                         "};" \n
                         "" \n
                         "if (""NO RESPONSE"" in _tacomResponse) then {" \n
                         "    [""-----------------TACOM----- OPERATION BAD RETURN! = %1"", _operation] call ALiVE_fnc_Dump;" \n
                         "};" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "GROUP_NOT_CONFIR">*/
                                class GROUP_NOT_CONFIR
                                {
                                        itemno = 18;
                                        priority = 0.000000;
                                        to="TRANSMIT_TO_OPCO";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"!(_TAC_confirmed) || {time - _timestamp > 30};"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[""-----------------TACOM----- GROUP NOT CONFIRM""] call ALiVE_fnc_Dump;" \n
                                         "_TAC_confirmed = false;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "GROUP_CONFIRM">*/
                                class GROUP_CONFIRM
                                {
                                        itemno = 17;
                                        priority = 0.000000;
                                        to="TRANSMIT_TO_OPCO";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"_TAC_confirmed"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[""-----------------TACOM----- GROUP CONFIRM""] call ALiVE_fnc_Dump;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "TRANSMIT_TO_OPCO">*/
                class TRANSMIT_TO_OPCO
                {
                        name = "TRANSMIT_TO_OPCO";
                        itemno = 19;
                        init = /*%FSM<STATEINIT""">*/"[""-----------------TACOM----- TRANSMIT TO OPCOM = confirmed-%1  for  %2"", _TAC_confirmed, _tacomResponse] call ALiVE_fnc_Dump;" \n
                         "_OPCOM_FSM setFSMVariable [""_OPCOM_DATA"",[""confirmed"",[_TAC_confirmed,_tacomResponse]]];"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "Transmitted">*/
                                class Transmitted
                                {
                                        itemno = 20;
                                        priority = 5.000000;
                                        to="Wait_for_Data";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"true"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[""-----------------TACOM----- TRANSMITTED""] call ALiVE_fnc_Dump;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "END">*/
                class END
                {
                        name = "END";
                        itemno = 23;
                        init = /*%FSM<STATEINIT""">*/"[_OPCOM_HANDLER,""TACOM_FSM""] call ALiVE_fnc_HashRem;"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "Internal_Analysi">*/
                class Internal_Analysi
                {
                        name = "Internal_Analysi";
                        itemno = 24;
                        init = /*%FSM<STATEINIT""">*/"// Scan for enemies when inactive more than 60 seconds" \n
                         "//[""Analyze internal | %1 | %2"",time,_lastEnemyScan] call ALiVE_fnc_DumpR;" \n
                         "" \n
                         "[""-----------------TACOM----- Internal Analysis""] call ALiVE_fnc_Dump;" \n
                         "" \n
                         "if (time - _lastEnemyScan > 60) then {" \n
                         "    [_OPCOM_HANDLER,""scanallenemies""] spawn ALIVE_fnc_OPCOM;" \n
                         "" \n
                         "    _targets = [_OPCOM_HANDLER,""knownentities"",[]] call ALiVE_fnc_HashGet;" \n
                         "" \n
                         "    if (_debug) then {" \n
                         "        [""TACOM %2 found enemies when scanning for enemies: %1"",_targets,_side] call ALiVE_fnc_DumpR;" \n
                         "    };" \n
                         "" \n
                         "    //Attack reported enemy directly" \n
                         "    if (count _targets > 0) then {" \n
                         "        private _targetID = _targets select 0 select 0;" \n
                         "        private _target = [ALiVE_profileHandler, ""getProfile"", _targetID] call ALiVE_fnc_profileHandler;" \n
                         "" \n
                         "        if (isnil ""_target"") exitwith {};" \n
                         "" \n
                         "        private _vehicle = ([_target,""vehicleAssignments"",[[],[]]] call ALIVE_fnc_hashGet) select 1;" \n
                         "" \n
                         "        if (count _vehicle > 0) then {" \n
                         "            // Attack with 1 air vehicle if target is in a vehicle" \n
                         "            if (_debug) then {" \n
                         "                [""TACOM %2 sends QRF request to OPCOM (%1)"", _targetID, _side] call ALiVE_fnc_DumpR;" \n
                         "            };" \n
                         "" \n
                         "            _OPCOM_FSM setFSMVariable [""_OPCOM_DATA"",[""QRF"",[_targetID]]];" \n
                         "        } else {" \n
                         "            // Send 2 infantry groups if target is not in a vehicle" \n
                         "            if (_debug) then {" \n
                         "                [""TACOM %2 sends QRF of type infantry on %1"", _targetID, _side] call ALiVE_fnc_DumpR;" \n
                         "            };" \n
                         "" \n
                         "            _attackers = [_OPCOM_HANDLER, ""attackentity"",[_targetID,2,""infantry""]] call ALIVE_fnc_OPCOM;" \n
                         "        };" \n
                         "    };" \n
                         "" \n
                         "    _lastEnemyScan = time;" \n
                         "};" \n
                         "" \n
                         "_lastanalyze = time;" \n
                         "" \n
                         ""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "Analysis_Complet">*/
                                class Analysis_Complet
                                {
                                        itemno = 27;
                                        priority = 1.000000;
                                        to="Wait_for_Data";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"true"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"[""-----------------TACOM----- Analysis Complete""] call ALiVE_fnc_Dump;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
        };
        initState="INIT";
        finalStates[] =
        {
                "END",
        };
};
/*%FSM</COMPILE>*/