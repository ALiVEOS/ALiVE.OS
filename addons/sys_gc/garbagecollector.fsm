/*%FSM<COMPILE "C:\Program Files (x86)\Bohemia Interactive\Tools\FSM Editor Personal Edition\scriptedFSM.cfg, Garbage Collector">*/
/*%FSM<HEAD>*/
/*
item0[] = {"Start",0,250,-20.000000,-160.000000,70.000000,-110.000000,0.000000,"Start"};
item1[] = {"Check_queue",2,250,-20.000000,-10.000000,70.000000,40.000000,0.000000,"Check queue"};
item2[] = {"Empty",4,218,-87.128693,82.178215,2.871286,132.178223,1.000000,"Empty"};
item3[] = {"Not_empty",4,218,43.564377,82.178215,133.564362,132.178223,0.000000,"Not empty"};
item4[] = {"Delay",2,250,-210.000000,80.000000,-120.000000,130.000000,0.000000,"Delay"};
item5[] = {"Delay_over___10s",4,218,-220.000000,-20.000000,-110.000000,40.000000,0.000000,"Delay over " \n "(10s)"};
item6[] = {"___process_queue",2,250,40.000000,200.000000,150.000000,250.000000,0.000000,"* process_queue *"};
item7[] = {"Always",8,218,-210.000000,200.000000,-120.000000,250.000000,0.000000,"Always"};
item8[] = {"Always",8,218,-20.000000,-90.000000,70.000000,-40.000000,0.000000,"Always"};
item9[] = {"Exit_",4,4314,200.000000,-10.000000,290.000000,40.000000,2.000000,"Exit?"};
item10[] = {"END",1,250,200.000000,-170.000000,290.000000,-120.000000,0.000000,"END"};
link0[] = {0,8};
link1[] = {1,2};
link2[] = {1,3};
link3[] = {1,9};
link4[] = {2,4};
link5[] = {3,6};
link6[] = {4,5};
link7[] = {5,1};
link8[] = {6,7};
link9[] = {7,4};
link10[] = {8,1};
link11[] = {9,10};
globals[] = {10.000000,1,0,1,16777215,640,480,1,12,6316128,1,-359.369995,359.369965,446.541138,-343.060547,639,702,1};
window[] = {0,-1,-1,-1,-1,877,44,1308,44,1,656};
*//*%FSM</HEAD>*/
class FSM
{
  fsmName = "Garbage Collector";
  class States
  {
    /*%FSM<STATE "Start">*/
    class Start
    {
      name = "Start";
      init = /*%FSM<STATEINIT""">*/"[""ALiVE - Starting Garbage Collector...""] call ALiVE_fnc_dump;" \n
       "" \n
       "private [""_collector"", ""_timeNow"", ""_handle"", ""_path"", ""_autotime""];" \n
       "_collector = _this;" \n
       "_lastAnalyze = 0;" \n
       "_path = ""\x\alive\addons\sys_GC\"";" \n
       "_interval = parseNumber (_collector getvariable ([""ALiVE_GC_INTERVAL"",""300""]));" \n
       "_threshold = parseNumber (_collector getvariable ([""ALiVE_GC_THRESHHOLD"",""50""]));" \n
       "_exitFSM = false;" \n
       "" \n
       "//Initialize the queue." \n
       "private [""_queue""];" \n
       "_collector setVariable [""queue"", []];" \n
       ""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Always">*/
        class Always
        {
          priority = 0.000000;
          to="Check_queue";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"true"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Check_queue">*/
    class Check_queue
    {
      name = "Check_queue";
      init = /*%FSM<STATEINIT""">*/"_auto = _collector getVariable [""auto"",false];" \n
       "_queue = _collector getVariable [""queue"",[]];" \n
       "" \n
       "if (_auto && {time - _lastanalyze > _interval}) then {" \n
       "    _handle = [_collector,""collect""] spawn ALiVE_fnc_GC;" \n
       "    _lastAnalyze = time;" \n
       "} else {" \n
       "    _handle = [] spawn {};" \n
       "};" \n
       ""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Exit_">*/
        class Exit_
        {
          priority = 2.000000;
          to="END";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_exitFSM"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Empty">*/
        class Empty
        {
          priority = 1.000000;
          to="Delay";
          precondition = /*%FSM<CONDPRECONDITION""">*/"_queue = _collector getVariable [""queue"",[]];"/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(scriptdone _handle) && {count _queue == 0}"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Not_empty">*/
        class Not_empty
        {
          priority = 0.000000;
          to="___process_queue";
          precondition = /*%FSM<CONDPRECONDITION""">*/"_queue = _collector getVariable [""queue"",[]];"/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(scriptdone _handle) && {count _queue > 0}"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Delay">*/
    class Delay
    {
      name = "Delay";
      init = /*%FSM<STATEINIT""">*/"_timeNow = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Delay_over___10s">*/
        class Delay_over___10s
        {
          priority = 0.000000;
          to="Check_queue";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"(time - _timeNow) >= 10"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "___process_queue">*/
    class ___process_queue
    {
      name = "___process_queue";
      init = /*%FSM<STATEINIT""">*/"_handle = -1; " \n
       "" \n
       "if ((count allDead) < _threshold) then {" \n
       "    _handle = [_collector,""process"",false] spawn ALiVE_fnc_GC;" \n
       "} else {" \n
       "    _handle = [_collector,""process"",true] spawn ALiVE_fnc_GC;" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Always">*/
        class Always
        {
          priority = 0.000000;
          to="Delay";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"scriptdone _handle;"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "END">*/
    class END
    {
      name = "END";
      init = /*%FSM<STATEINIT""">*/"diag_log ""ALiVE - Exiting Garbage Collector..."";"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
  };
  initState="Start";
  finalStates[] =
  {
    "END",
  };
};
/*%FSM</COMPILE>*/